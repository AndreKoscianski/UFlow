#-------------------------------------------------------
#   General setup
#-------------------------------------------------------
# Controls whether pseudo random sequence starts
#   with the same value, or with a time() value.
# This allows to repeat an experiment and obtain
#   the same resuls
#-------------------------------------------------------
SimulationIsRepeatable = YES


#-------------------------------------------------------
# Set this to "YES" if a K map was calculated and
#   you want to simply re-use it.
# Set it to "NO" if a K map file is not available,
#   for example if this is the 1st simulation of a city.
#-------------------------------------------------------
SkipCalibration = NO


#-------------------------------------------------------
#   Inputs
#-------------------------------------------------------
# Two images, grayscale; anything > 0.5 = urbanized
#-------------------------------------------------------
image1 = ./Test/map1.png
image2 = ./Test/map2.png

#-----------------------------------
# Distance (years)= img2 - img1  (float accepted)
#-------------------------------------------------------
deltaTime = 10.0

#------------------------------------------------
#  Roads
#------------------------------------------------
# One image, white pixel over black background)
# Will be used throughout simulation and forecast
#------------------------------------------------
roads  = ./Test/streets.png


#------------------------------------------------
# Exclusion map
#------------------------------------------------
# One image, greyscale, black = non-urban
# Will be used throughout simulation and forecast
# Write NULL if there's no exclusion layer.
#------------------------------------------------
#exclusion  = /home/Test/Excluded.png
exclusion  = NULL



#------------------------------------------------
# Distance map
#------------------------------------------------
# Map of plausible regions for 'spraying', computed as
#   distance to nearest urban pixel.
# Map is computed and saved, if file does not exist.
# Each pixel is adjusted as exp(-sigma*pixel).
#------------------------------------------------
DistanceMap   = ./Test/DistanceMap.png
sigma = 15.0


#-----------------------------------
#  Probability map
#-------------------------------------
# Map of plausible regions for 'spraying', computed with
#   heat equation.
# Map is computed and saved, if file does not exist.
# Define here number of heat cycles; the larger the number,
#   the more the map will be stretched.
PiMap   = ./Test/PiMap.png
HeatCyclesPiMap = 2000


#-----------------------------------
#  Execution options
#-------------------------------------



#-------------------------------------
# Maximum number of calibration loops.
# Increase the value if you perceive that the calibration metric
#  has room to improve (=raise). Check screen output and log file.
MaxCalibrationLoops = 30



#-------------------------------------
# Maximum number of heat equation cycles.
# Increase the value if you perceive that during calibration metric
#  has room to improve (=raise). Check screen output and log file.
MaxHeatCycles = 5000


#-------------------------------------
# The parameter gamma controls the amount of insulation against heat
#  that is deposited in every loop.
# A typical value would be 0.1
gamma = 0.1


#-------------------------------------
# Spray urbanization clusters in the hot (=plausible) map?
# This process creates 'clusters'.
# The size of clusters corresponds to the smaller cluster in image2.
# The number of clusters is the amount of new clusters from image1 to image2.
UrbanSprayForecast  = YES

#-------------------------------------
#The K map shows the diffusion coefficient.
#It is initially set to 1, then it is gradually modified during calibration.
#The K map is perturbed with noise before forecast calculation;
#enter here the amount [0 ; 1]
KMapNoise = 0.25
SaveKMap = ./Test/KMap.png




#---------------------------------------
# Forecast years  (float accepted)
# This is a linear-regression parameter;
#    forecasts will approximate the city
#    size as if image1 - image2 - image3
#    follow a line.
#----------------------------------------
forecastTime = 10.0


#Output (required strings, do not leave blank)
#-------------------------------------
backgroundImg = NULL
simulationImg = ./Test/simulation.png
simulationErr = ./Test/simulationErr.png
forecastImg   = ./Test/forecast.png
